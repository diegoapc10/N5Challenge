version: '3.4'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    # networks:
    #   - permissionsnetwork

  kafka:
    image: confluentinc/cp-kafka
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_BROKER_ID=1
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
    depends_on:
      - zookeeper
    # networks:
    #   - permissionsnetwork

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.24
    container_name: elasticsearch
    environment:
    - discovery.type=single-node
    - xpack.security.enabled=false
    ports:
    - 9200:9200
    - 9300:9300
    volumes:
    - esdata:/usr/share/elasticsearch/data
    networks:
    - permissionsnetwork

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.24
    container_name: kibana
    ports:
    - 5601:5601
    environment:
    - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
    - permissionsnetwork

  n5challengeapi:
    image: ${DOCKER_REGISTRY-}n5challengeapi
    build:
      context: .
      dockerfile: N5ChallengeAPI/Dockerfile
    ports:
    - "8001:8001"
    - "8002:8002"
    depends_on:
    - sqlserver
    environment:
    - ASPNETCORE_ENVIRONMENT=Dvelopment
    networks:
    - permissionsnetwork
    restart: on-failure

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "Password12345!"
      ACCEPT_EULA: "Y"
    ports:
    - "1433:1433"
    volumes:
    - sqlvolume:/var/opt/mssql
    networks:
    - permissionsnetwork

networks:
  permissionsnetwork:
  
volumes:
  esdata:
    driver: local
  sqlvolume: